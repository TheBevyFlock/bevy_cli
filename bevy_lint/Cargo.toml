[package]
name = "bevy_lint"
version = "0.3.0"
authors = ["BD103"]
edition = "2024"
description = "A collection of lints for the Bevy game engine"
repository = "https://github.com/TheBevyFlock/bevy_cli"
license = "MIT OR Apache-2.0"
# While there are two binaries available, only `bevy_lint` is intended to be called by users.
default-run = "bevy_lint"

# The main entrypoint for using Bevy lints. This program is intended to be called by users.
[[bin]]
name = "bevy_lint"
path = "src/bin/main.rs"

# The internal program called by `cargo` instead of `rustc`. While this is where the lints are
# registered, it is not intended to be called by users.
[[bin]]
name = "bevy_lint_driver"
path = "src/bin/driver.rs"

[[test]]
name = "ui"
harness = false

[[test]]
name = "ui_cargo"
harness = false

[dependencies]
# Contains a series of useful utilities when writing lints. The version is chosen to work with the
# currently pinned nightly Rust version. When the Rust version changes, this too needs to be
# updated!
clippy_utils = "=0.1.88"

# Easy error propagation and contexts.
anyhow = "1.0.86"
# Easy structured output for `cargo metadata`, used for cargo lints
cargo_metadata = "0.19"

# Configuration deserialization.
serde = { version = "1.0.210", features = ["derive"] }
toml = { version = "0.8.19", default-features = false, features = ["parse"] }

[build-dependencies]
# Parse `rust-toolchain.toml` at build time.
toml_edit = { version = "0.22.22", default-features = false, features = [
    "parse",
] }

[dev-dependencies]
# Used when running UI tests.
bevy = { version = "0.16.0", default-features = false, features = ["std"] }

# Used to deserialize `--message-format=json` messages from Cargo.
serde_json = "1.0.140"

# Ensures the error messages for lints do not regress.
ui_test = "0.29.2"

[package.metadata.rust-analyzer]
# Enables Rust-Analyzer support for `rustc` crates.
rustc_private = true

[package.metadata.docs.rs]
# Unlike `cargo doc-lints`, docs.rs doesn't know this crate is in a workspace, it just receives the
# archive resulting from `cargo package`. In this scenario, we do not need to specify `bevy_lint` before
# `assets/rustdoc.css`.
rustdoc-args = ["--extend-css", "assets/rustdoc.css"]
