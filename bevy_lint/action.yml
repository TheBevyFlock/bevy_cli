name: Install `bevy_lint`
author: BD103
description: |
  Installs the Bevy linter and its required toolchain.

  This action currently uses Rustup to install the required toolchain components, and it uses
  `cargo install` to install the linter itself. The linter will be installed to `~/.cargo/bin` and
  will be available through the `PATH` by default.

  Note that this currently will override the default Rustup toolchain to nightly. You can fix this
  by calling `rustup default` after this action is run.
runs:
  using: composite
  steps:
    # Use Regex to extract the `toolchain.channel` field in `rust-toolchain.toml`.
    - name: Extract channel
      id: channel
      shell: bash
      run: |
        # Read the contents of `rust-toolchain.toml`.
        RUST_TOOLCHAIN=$(< "${RUST_TOOLCHAIN_PATH}")

        # This Regex will capture the channel specified in `rust-toolchain.toml`.
        REGEX='^channel = "(.+)"$'

        if [[ "${RUST_TOOLCHAIN}" =~ "${REGEX}" ]]; then
          # The `$BASH_REMATCH` variable stores the captured results. In this case,
          # `${BASH_REMATCH[1]}` gives us the value of the first group, which is usually
          # `nightly-YYYY-MM-DD`.
          CHANNEL="${BASH_REMATCH[1]}"

          echo "channel=${CHANNEL}" >> "${GITHUB_OUTPUT}"
        else
          echo "::error title=Could not extract channel::The Regex ${REGEX} did not match the contents of ${RUST_TOOLCHAIN_PATH}."
          exit 1
        fi
      env:
        RUST_TOOLCHAIN_PATH: ${{ github.action_path }}/../rust-toolchain.toml

    - name: Install Rust toolchain and components
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.channel.outputs.channel }}
        # These components are hard-coded because they are unlikely to change. They should match
        # `rust-toolchain.toml`.
        components: rustc-dev, llvm-tools-preview

    - name: Install `bevy_lint`
      shell: bash
      run: |
        rustup run "${RUST_CHANNEL}" cargo install \
          --path "${BEVY_LINT_PATH}" \
          --locked
      env:
        RUST_CHANNEL: ${{ steps.channel.outputs.channel }}
        # As the full contents of `TheBevyFlock/bevy_cli` is included alongside this action, we can
        # install the linter relative to the action path.
        BEVY_LINT_PATH: ${{ github.action_path }}
