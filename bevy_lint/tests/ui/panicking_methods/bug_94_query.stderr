error: called a `Query` method that can panic when a non-panicking alternative exists
  --> tests/ui/panicking_methods/bug_94_query.rs:15:5
   |
15 |     Query::single(&query);
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `Query::get_single(&query)` and handle the `Option` or `Result`
note: the lint level is defined here
  --> tests/ui/panicking_methods/bug_94_query.rs:3:9
   |
3  | #![deny(bevy::panicking_query_methods)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: called a `Query` method that can panic when a non-panicking alternative exists
  --> tests/ui/panicking_methods/bug_94_query.rs:18:5
   |
18 |     Query::single_mut(&mut query);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `Query::get_single_mut(&mut query)` and handle the `Option` or `Result`

error: called a `Query` method that can panic when a non-panicking alternative exists
  --> tests/ui/panicking_methods/bug_94_query.rs:24:21
   |
24 |     let [_, _, _] = Query::many(&query, entities);
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `Query::get_many(&query, entities)` and handle the `Option` or `Result`

error: called a `Query` method that can panic when a non-panicking alternative exists
  --> tests/ui/panicking_methods/bug_94_query.rs:28:5
   |
28 |     Query::many_mut(&mut query, []);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `Query::get_many_mut(&mut query, [])` and handle the `Option` or `Result`

error: aborting due to 4 previous errors

