error: called a `Query` method that can panic when a non-panicking alternative exists
  --> tests/ui/panicking_methods/query.rs:17:11
   |
17 |     query.single();
   |           ^^^^^^^^
   |
   = help: use `query.get_single()` and handle the `Option` or `Result`
note: the lint level is defined here
  --> tests/ui/panicking_methods/query.rs:5:9
   |
5  | #![deny(bevy::panicking_query_methods)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: called a `Query` method that can panic when a non-panicking alternative exists
  --> tests/ui/panicking_methods/query.rs:21:11
   |
21 |     query.single_mut();
   |           ^^^^^^^^^^^^
   |
   = help: use `query.get_single_mut()` and handle the `Option` or `Result`

error: called a `Query` method that can panic when a non-panicking alternative exists
  --> tests/ui/panicking_methods/query.rs:27:27
   |
27 |     let [_, _, _] = query.many(entities);
   |                           ^^^^^^^^^^^^^^
   |
   = help: use `query.get_many(entities)` and handle the `Option` or `Result`

error: called a `Query` method that can panic when a non-panicking alternative exists
  --> tests/ui/panicking_methods/query.rs:31:11
   |
31 |     query.many_mut([]);
   |           ^^^^^^^^^^^^
   |
   = help: use `query.get_many_mut([])` and handle the `Option` or `Result`

error: aborting due to 4 previous errors

