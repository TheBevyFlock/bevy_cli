name: Test linter action

on:
  push:
    branches: [main]
  # Only run for pull requests when the action or toolchain is modified.
  pull_request:
    paths:
      - bevy_lint/action.yml
      - rust-toolchain.toml
  workflow_dispatch:

jobs:
  without-cache:
    name: Install `bevy_lint`
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install `bevy_lint`
        id: install-linter
        uses: ./bevy_lint

      # As we're not using the cache, there shouldn't be a cache hit.
      - name: Ensure `cache-hit` is empty
        run: test -z "${CACHE_HIT}"
        env:
          CACHE_HIT: ${{ steps.install-linter.outputs.cache-hit }}

      - name: Print `bevy_lint` version
        run: bevy_lint --version

      - name: Run `bevy_lint` on `bevy_lint`
        run: bevy_lint --package bevy_lint --locked

  with-cache:
    name: Test `bevy_lint` caching
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    # This prevents multiple runners with the same OS from running this job concurrently. If two
    # Ubuntu, Windows, or Mac runners try to run at the same time, they might accidentally delete
    # each other's caches.
    concurrency:
      group: linter-action-with-cache-${{ matrix.os }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clear cached `bevy_lint`
        # Delete all existing `bevy_lint` caches for a specific OS.
        run: gh cache delete "bevy_lint-${RUNNER_OS}-"
        # If `bevy_lint` isn't cached yet, this will fail. That's alright, though! The cache is
        # empty either way.
        continue-on-error: true
        env:
          RUNNER_OS: ${{ runner.os }}

      - name: Install `bevy_lint` without saving cache
        id: first-install-linter
        uses: ./bevy_lint
        with:
          cache: 'true'
          save-cache-if: 'false'

      - name: Ensure `cache-hit` is empty
        run: test -z "${CACHE_HIT}"
        env:
          CACHE_HIT: ${{ steps.first-install-linter.outputs.cache-hit }}

      - name: Uninstall `bevy_lint`
        run: cargo uninstall bevy_lint

      - name: Install `bevy_lint` and save cache
        id: second-install-linter
        uses: ./bevy_lint
        with:
          cache: 'true'
          save-cache-if: 'true'

      - name: Ensure `cache-hit` is empty
        run: test -z "${CACHE_HIT}"
        env:
          CACHE_HIT: ${{ steps.second-install-linter.outputs.cache-hit }}

      - name: Uninstall `bevy_lint`
        run: cargo uninstall bevy_lint

      - name: Install `bevy_lint` from cache
        id: third-install-linter
        uses: ./bevy_lint
        with:
          cache: 'true'
          save-cache-if: 'true'

      - name: Ensure `cache-hit` is 'true'
        run: test "${CACHE_HIT}" = 'true'
        env:
          CACHE_HIT: ${{ steps.third-install-linter.outputs.cache-hit }}
